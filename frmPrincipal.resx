<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogoGrande.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>